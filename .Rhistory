df.tmp$OTUid <- rownames(df.tmp)
rownames(df.tmp) <- NULL
tmp <- melt(df.tmp, id = "OTUid") %>% filter(value != 0)
rm(df.tmp)
colnames(tmp) <- c("ASVid", "SampleID", "Reads")  ## note these are OTUs, not ASVs, but this matches the taxonomy info
df.tmp <- merge(tmp, taxa)
rm(tmp)
df.tmp <- merge(df.tmp, meta)
df.tmp <- df.tmp %>% filter(BatchType == "single")
mat.tmp <- dcast(data = df.tmp, formula = SampleID ~ ASVid, value.var='Reads', fill = 0)
row.names(mat.tmp) <- mat.tmp$SampleID
mat.tmp$SampleID <- NULL
tmp.hill <- data.frame(renyi(mat.tmp, scales = c(0,1), hill=TRUE)) %>% mutate(SampleID = row.names(.))
colnames(tmp.hill)[1:2] <- c("Observed", "Shannons")
Alpha_df <- gather(tmp.hill, key="Alpha_metric", value = "Alpha_value", c('Observed', 'Shannons'))
mangan_hill_df <- merge(Alpha_df, meta)
rm(tmp.hill, mat.tmp, Alpha_df, df.tmp, qzapath)
obs_alpha <- mangan_hill_df %>%
filter(Alpha_metric=="Observed") %>%
select(Alpha_value) %>% pull()
shan_alpha <- mangan_hill_df %>%
filter(Alpha_metric=="Shannons") %>%
select(Alpha_value) %>% pull()
shapiro.test(obs_alpha)
shapiro.test(shan_alpha)
## see also the visualizations, which suggest an almost normal Observed dataset, but not for Shannons
ggdensity(obs_alpha,
main = "Density plot of Alpha val",
xlab = "Observed OTU")
ggdensity(shan_alpha,
main = "Density plot of Alpha val",
xlab = "Observed OTU")
ggqqplot(obs_alpha)
ggqqplot(shan_alpha)
###### 2a. Run Kruskal Wallis:
kwfunction <- function(alpha_metric){
mangan_hill_df$Grouper <- paste(mangan_hill_df$CollectionMonth, mangan_hill_df$Site, sep="-")
mangan_hill_df$Grouper <- as.factor(mangan_hill_df$Grouper)
kruskal.test(Alpha_value ~ Grouper,
data = mangan_hill_df %>% filter(Alpha_metric == alpha_metric))
}
kw_observed <- kwfunction('Observed')
kw_observed
kw_shannons <- kwfunction('Shannons')
kw_shannons
## 2bi. First part... split the dataset into Observed/Shannon's values
mangan_hill_df$CollectionMonth <- gsub("September", "Sept", mangan_hill_df$CollectionMonth)
mangan_hill_df$Grouper <- paste(mangan_hill_df$CollectionMonth, mangan_hill_df$Site, sep="-")
observed_dat <- mangan_hill_df %>% filter(Alpha_metric=="Observed")
observed_dat$Grouper <- factor(observed_dat$Grouper, levels = c(
"June-EN", "June-HB", "July-EN", "July-HB", "Sept-EN", "Sept-HB"))
shannon_dat <- mangan_hill_df %>% filter(Alpha_metric=="Shannons")
shannon_dat$Grouper <- factor(shannon_dat$Grouper, levels = c(
"June-EN", "June-HB", "July-EN", "July-HB", "Sept-EN", "Sept-HB"))
## 2bii. Second part... perform pairwise Wilcoxon rank sum tests (pairwise comparisons)
## use this function to generate lettered values differentiating every pairwise comp.
lpf <- function(data){
attach(data)
tmp_tri <- pairwise.wilcox.test(Alpha_value, Grouper, p.adjust.method = "BH")
detach()
h0_mat <- tmp_tri$p.value
`June-EN`= c(1, NA, NA, NA, NA, NA)
`Sept-HB` = c(NA, NA, NA, NA, 1)
h0_mat <- cbind(h0_mat, `Sept-HB`)
h0_mat <- rbind(`June-EN`, h0_mat)
h0_mat <- Matrix::forceSymmetric(h0_mat,uplo="L")
h0_mat <- as.matrix(h0_mat)
h0_mat[is.na(h0_mat)] <- 1
tmp_lmat <- multcompLetters(h0_mat, compare="<=", threshold=0.05, Letters=letters)
tmp_labels <- data.frame(tmp_lmat$Letters) %>%
rename(Letters = tmp_lmat.Letters) %>%
mutate(Grouper = row.names(.))
}
observed_labels <- lpf(observed_dat)
shannon_labels <- lpf(shannon_dat)
plotdat_observed <- merge(observed_dat, observed_labels)
plotdat_shannons <- merge(shannon_dat, shannon_labels)
## get the KW values for the annotation using this function:
getKWlabel_forplot_function <- function(kw_data){
kw_degfree <- as.data.frame(kw_data$parameter) %>% pull() %>% as.character()
kw_chistat <- as.data.frame(kw_data$statistic) %>% pull() %>% round(3) %>%  as.character()
kw_pval <- as.data.frame(kw_data$p.value) %>% pull() %>% round(6) %>% as.character()
paste0("Kruskal-Wallis   H(", kw_degfree,") = ", kw_chistat, ", p = ", kw_pval)
}
observed_KWlabel <- getKWlabel_forplot_function(kw_observed)
shannons_KWlabel <- getKWlabel_forplot_function(kw_shannons)
## now make each plot
## if using color, match for beta diversity scheme in Figure 3
v3pal <- viridis::plasma(3, begin = 0.35, end = 0.9, direction = -1)
## observed plot...
## toggle on/off to make colored/not
observed_plot <- ggplot(plotdat_observed) +
scale_color_manual(values = v3pal) +
geom_boxplot(aes(x=Grouper, y=Alpha_value), outlier.shape = NA) +
#geom_jitter(aes(x=Grouper, y=Alpha_value, color=CollectionMonth, shape=Site), width=0.15, size=2) +    ## toggle on for color version
geom_jitter(aes(x=Grouper, y=Alpha_value, shape=Site), width=0.15, size=2) +   ## toggle on for black/white version
facet_wrap(~ Alpha_metric) +
labs(x="", y="Estimated diversity\n", color="Month") +
geom_label(data = plotdat_observed,
aes(x = Grouper, y = max(Alpha_value*1.1), label=Letters),
colour = "white", fontface = "bold", fill="black", size=4) +
annotate("text", x=2.5, y=75, label = observed_KWlabel, size=5) +
theme_devon() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position = "none") ## toggle on for black/white version
shannon_plot <- ggplot(plotdat_shannons) +
scale_color_manual(values = v3pal) +
geom_boxplot(aes(x=Grouper, y=Alpha_value), outlier.shape = NA) +
#geom_jitter(aes(x=Grouper, y=Alpha_value, color=CollectionMonth, shape=Site), width=0.15, size=2) + ## toggle on for color version
geom_jitter(aes(x=Grouper, y=Alpha_value, shape=Site), width=0.15, size=2) +  ## toggle on for black/white version
facet_wrap(~ Alpha_metric) +
labs(x="", y="Estimated diversity\n", color="Month") +
geom_label(data = plotdat_shannons,
aes(x = Grouper, y = max(Alpha_value*1.1), label=Letters),
colour = "white", fontface = "bold", fill="black", size=4) +
annotate("text", x=2.5, y=35, label = shannons_KWlabel, size=5) +
theme_devon() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
strip.text = element_text(size = 14),
#legend.position="top")   ## toggle on for color version
legend.position = "none") ## toggle on for black/white version
ggarrange(observed_plot, shannon_plot, nrow = 2, common.legend=TRUE)
ggarrange(observed_plot, shannon_plot, nrow = 2)
library(svglite)
shannon_plot <- ggplot(plotdat_shannons) +
scale_color_manual(values = v3pal) +
geom_boxplot(aes(x=Grouper, y=Alpha_value), outlier.shape = NA) +
geom_jitter(aes(x=Grouper, y=Alpha_value, color=CollectionMonth, shape=Site), width=0.15, size=2) + ## toggle on for color version
#geom_jitter(aes(x=Grouper, y=Alpha_value, shape=Site), width=0.15, size=2) +  ## toggle on for black/white version
facet_wrap(~ Alpha_metric) +
labs(x="", y="Estimated diversity\n", color="Month") +
geom_label(data = plotdat_shannons,
aes(x = Grouper, y = max(Alpha_value*1.1), label=Letters),
colour = "white", fontface = "bold", fill="black", size=4) +
annotate("text", x=2.5, y=35, label = shannons_KWlabel, size=5) +
theme_devon() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position="top")   ## toggle on for color version
ggarrange(observed_plot, shannon_plot, nrow = 2, common.legend=TRUE)
## observed plot...
## toggle on/off to make colored/not
observed_plot <- ggplot(plotdat_observed) +
scale_color_manual(values = v3pal) +
geom_boxplot(aes(x=Grouper, y=Alpha_value), outlier.shape = NA) +
geom_jitter(aes(x=Grouper, y=Alpha_value, color=CollectionMonth, shape=Site), width=0.15, size=2) +    ## toggle on for color version
#geom_jitter(aes(x=Grouper, y=Alpha_value, shape=Site), width=0.15, size=2) +   ## toggle on for black/white version
facet_wrap(~ Alpha_metric) +
labs(x="", y="Estimated diversity\n", color="Month") +
geom_label(data = plotdat_observed,
aes(x = Grouper, y = max(Alpha_value*1.1), label=Letters),
colour = "white", fontface = "bold", fill="black", size=4) +
annotate("text", x=2.5, y=75, label = observed_KWlabel, size=5) +
theme_devon() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
strip.text = element_text(size = 14),
#legend.position = "none") ## toggle on for black/white version
legend.position="top")   ## toggle on for color version
shannon_plot <- ggplot(plotdat_shannons) +
scale_color_manual(values = v3pal) +
geom_boxplot(aes(x=Grouper, y=Alpha_value), outlier.shape = NA) +
geom_jitter(aes(x=Grouper, y=Alpha_value, color=CollectionMonth, shape=Site), width=0.15, size=2) + ## toggle on for color version
#geom_jitter(aes(x=Grouper, y=Alpha_value, shape=Site), width=0.15, size=2) +  ## toggle on for black/white version
facet_wrap(~ Alpha_metric) +
labs(x="", y="Estimated diversity\n", color="Month") +
geom_label(data = plotdat_shannons,
aes(x = Grouper, y = max(Alpha_value*1.1), label=Letters),
colour = "white", fontface = "bold", fill="black", size=4) +
annotate("text", x=2.5, y=35, label = shannons_KWlabel, size=5) +
theme_devon() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
strip.text = element_text(size = 14),
legend.position="top")   ## toggle on for color version
ggarrange(observed_plot, shannon_plot, nrow = 2, common.legend=TRUE)  ## toggle on for black/white version
ggsave("~github/mysosoup/figures/Figure_2_alphaDiv_col.png", width = 20, height = 20, units = "cm")
ggsave("~/github/mysosoup/figures/Figure_2_alphaDiv_col.svg", width = 20, height = 20, units = "cm")
ggsave("~github/mysosoup/figures/Figure_2_alphaDiv_col.png", width = 20, height = 20, units = "cm")
View(observed_labels)
View(observed_labels)
attach(observed_dat)
tmp_tri <- pairwise.wilcox.test(Alpha_value, Grouper, p.adjust.method = "BH")
detach()
View(tmp_tri)
h0_mat <- tmp_tri$p.value
h0_mat
`June-EN`= c(1, NA, NA, NA, NA, NA)
`Sept-HB` = c(NA, NA, NA, NA, 1)
h0_mat <- cbind(h0_mat, `Sept-HB`)
h0_mat <- rbind(`June-EN`, h0_mat)
h0_mat
h0_mat <- tmp_tri$p.value
# `June-EN`= c(1, NA, NA, NA, NA, NA)
# `Sept-HB` = c(NA, NA, NA, NA, 1)
# h0_mat <- cbind(h0_mat, `Sept-HB`)
# h0_mat <- rbind(`June-EN`, h0_mat)
h0_mat
h0_mat <- data.frame(tmp_tri$p.value)
# `June-EN`= c(1, NA, NA, NA, NA, NA)
# `Sept-HB` = c(NA, NA, NA, NA, 1)
# h0_mat <- cbind(h0_mat, `Sept-HB`)
# h0_mat <- rbind(`June-EN`, h0_mat)
h0_mat
# `June-EN`= c(1, NA, NA, NA, NA, NA)
# `Sept-HB` = c(NA, NA, NA, NA, 1)
# h0_mat <- cbind(h0_mat, `Sept-HB`)
# h0_mat <- rbind(`June-EN`, h0_mat)
h0_mat$Pair <- row.names(h0_mat)
h0_mat
h0_mat %>%
pivot_longer(-Pair)
h0_mat %>%
pivot_longer(-Pair) %>%
filter(!is.na(value))
mutate(NewName = sub("\\.", "-", name)
)
h0_mat %>%
pivot_longer(-Pair, names_to="Names") %>%
filter(!is.na(value))
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to="Values") %>%
filter(!is.na(value)) %>%
mutate(NewName = sub("\\.", "-", Names))
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to="Values") %>%
filter(!is.na(value))
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "Values") %>%
filter(!is.na(value))
h0_mat %>%
pivot_longer(-Pair, names_to="Names") %>%
filter(!is.na(value))
h0_mat %>%
pivot_longer(-Pair, names_to="Names") %>%
filter(!is.na(value)) %>%
mutate(NewName = sub("\\.", "-", Names))
h0_mat %>%
pivot_longer(-Pair, names_to="Names") %>%
filter(!is.na(value)) %>%
mutate(Names = sub("\\.", "-", Names))
h0_mat %>%
pivot_longer(-Pair, names_to="Names") %>%
filter(!is.na(value)) %>%
mutate(Names = sub("\\.", "-", Names)) %>%
mutate(value = round(value, 3))
h0_mat %>%
pivot_longer(-Pair, names_to="Names") %>%
filter(!is.na(value)) %>%
mutate(Names = sub("\\.", "-", Names)) %>%
mutate(value = round(value, 3)) %>%
arrange(Pair, Names)
?pivot_longer()
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val")
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`))
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names)) %>%
mutate(`BH-adjusted p-val` = round(value, 3)) %>%
arrange(Pair, Names)
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names))
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names)) %>%
mutate(`BH-adjusted p-val` = round(`BH-adjusted p-val`, 3)) %>%
arrange(Pair, Names)
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names)) %>%
mutate(Metric = metricval,
`BH-adjusted p-val` = round(`BH-adjusted p-val`, 3)) %>%
arrange(Pair, Names)
metricval = "Observed"
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names)) %>%
mutate(Metric = metricval,
`BH-adjusted p-val` = round(`BH-adjusted p-val`, 3)) %>%
arrange(Pair, Names)
rm(metricval)
?arrange()
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names)) %>%
mutate(Metric = metricval,
`BH-adjusted p-val` = round(`BH-adjusted p-val`, 3)) %>%
arrange(across(ends_with("EN"), Names))
metricval = "Observed"
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names)) %>%
mutate(Metric = metricval,
`BH-adjusted p-val` = round(`BH-adjusted p-val`, 3)) %>%
arrange(across(ends_with("EN"), Names))
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names)) %>%
mutate(Metric = metricval,
`BH-adjusted p-val` = round(`BH-adjusted p-val`, 3)) %>%
arrange(across(ends_with("_EN"), Names))
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names)) %>%
mutate(Metric = metricval,
`BH-adjusted p-val` = round(`BH-adjusted p-val`, 3)) %>%
arrange(Names)
tmp <- h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names)) %>%
mutate(Metric = metricval,
`BH-adjusted p-val` = round(`BH-adjusted p-val`, 3))
tmp
targetorder <- c("June-EN", "July-EN", "Sept-EN", "June-HB", "July-HB", "Sept-HB")
tmp[match(targetorder, tmp$Names)]
targetorder <- c("June-EN", "July-EN", "Sept-EN", "June-HB", "July-HB")
tmp[match(targetorder, tmp$Names)]
tmp[match(targetorder, tmp$Pair)]
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names)) %>%
mutate(Metric = metricval,
`BH-adjusted p-val` = round(`BH-adjusted p-val`, 3)) %>%
arrange(Pair)
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names)) %>%
mutate(Metric = metricval,
`BH-adjusted p-val` = round(`BH-adjusted p-val`, 3)) %>%
arrange(across(starts_with("June"), Pair))
## use a modified function from above to retain the actual p-values for supplementary file:
wilcoxpvalfunction <- function(data){
aattach(observed_dat)
tmp_tri <- pairwise.wilcox.test(Alpha_value, Grouper, p.adjust.method = "BH")
detach()
h0_mat <- data.frame(tmp_tri$p.value)
h0_mat$Pair <- row.names(h0_mat)
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names),
Metric = metricval,
`BH-adjusted p-val` = round(`BH-adjusted p-val`, 3)) %>%
arrange(Pair)
}
wilcox_data_obs <- wilcoxpvalfunction(observed_dat, "Observed")
## use a modified function from above to retain the actual p-values for supplementary file:
wilcoxpvalfunction <- function(data, metricval){
aattach(observed_dat)
tmp_tri <- pairwise.wilcox.test(Alpha_value, Grouper, p.adjust.method = "BH")
detach()
h0_mat <- data.frame(tmp_tri$p.value)
h0_mat$Pair <- row.names(h0_mat)
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names),
Metric = metricval,
`BH-adjusted p-val` = round(`BH-adjusted p-val`, 3)) %>%
arrange(Pair)
}
wilcox_data_obs <- wilcoxpvalfunction(observed_dat, "Observed")
## use a modified function from above to retain the actual p-values for supplementary file:
wilcoxpvalfunction <- function(data, metricval){
attach(observed_dat)
tmp_tri <- pairwise.wilcox.test(Alpha_value, Grouper, p.adjust.method = "BH")
detach()
h0_mat <- data.frame(tmp_tri$p.value)
h0_mat$Pair <- row.names(h0_mat)
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names),
Metric = metricval,
`BH-adjusted p-val` = round(`BH-adjusted p-val`, 3)) %>%
arrange(Pair)
}
wilcox_data_obs <- wilcoxpvalfunction(observed_dat, "Observed")
wilcox_data_sha <- wilcoxpvalfunction(observed_dat, "Shannons")
all_wilcoxon_pairwise <- rbind(wilcox_data_obs, wilcox_data_sha)
View(all_wilcoxon_pairwise)
wilcox_data_sha <- wilcoxpvalfunction(shannon_dat, "Shannons")
all_wilcoxon_pairwise <- rbind(wilcox_data_obs, wilcox_data_sha)
## use a modified function from above to retain the actual p-values for supplementary file:
wilcoxpvalfunction <- function(data, metricval){
attach(data)
tmp_tri <- pairwise.wilcox.test(Alpha_value, Grouper, p.adjust.method = "BH")
detach()
h0_mat <- data.frame(tmp_tri$p.value)
h0_mat$Pair <- row.names(h0_mat)
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names),
Metric = metricval,
`BH-adjusted p-val` = round(`BH-adjusted p-val`, 3)) %>%
arrange(Pair)
}
wilcox_data_obs <- wilcoxpvalfunction(observed_dat, "Observed")
wilcox_data_sha <- wilcoxpvalfunction(shannon_dat, "Shannons")
all_wilcoxon_pairwise <- rbind(wilcox_data_obs, wilcox_data_sha)
write_csv(all_wilcoxon_pairwise,
"~/github/mysosoup/data/text_tables/wilcoxon_pairwise/all_alpha_pairwise_Wilcoxon.csv")
## use a modified function from above to retain the actual p-values for supplementary file:
wilcoxpvalfunction <- function(data, metricval){
attach(data)
tmp_tri <- pairwise.wilcox.test(Alpha_value, Grouper, p.adjust.method = "BH")
detach()
h0_mat <- data.frame(tmp_tri$p.value)
h0_mat$Pair <- row.names(h0_mat)
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names),
Metric = metricval,
`BH-adjusted p-val` = round(`BH-adjusted p-val`, 3)) %>%
arrange(`BH-adjusted p-val``)
}
wilcox_data_obs <- wilcoxpvalfunction(observed_dat, "Observed")
wilcox_data_sha <- wilcoxpvalfunction(shannon_dat, "Shannons")
all_wilcoxon_pairwise <- rbind(wilcox_data_obs, wilcox_data_sha)
write_csv(all_wilcoxon_pairwise,
"~/github/mysosoup/data/text_tables/wilcoxon_pairwise/all_alpha_pairwise_Wilcoxon.csv")
## use a modified function from above to retain the actual p-values for supplementary file:
wilcoxpvalfunction <- function(data, metricval){
attach(data)
tmp_tri <- pairwise.wilcox.test(Alpha_value, Grouper, p.adjust.method = "BH")
detach()
h0_mat <- data.frame(tmp_tri$p.value)
h0_mat$Pair <- row.names(h0_mat)
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names),
Metric = metricval,
`BH-adjusted p-val` = round(`BH-adjusted p-val`, 3)) %>%
arrange(`BH-adjusted p-val`)
}
## use a modified function from above to retain the actual p-values for supplementary file:
wilcoxpvalfunction <- function(data, metricval){
attach(data)
tmp_tri <- pairwise.wilcox.test(Alpha_value, Grouper, p.adjust.method = "BH")
detach()
h0_mat <- data.frame(tmp_tri$p.value)
h0_mat$Pair <- row.names(h0_mat)
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names),
Metric = metricval,
`BH-adjusted p-val` = round(`BH-adjusted p-val`, 3)) %>%
arrange(`BH-adjusted p-val`)
}
wilcox_data_obs <- wilcoxpvalfunction(observed_dat, "Observed")
wilcox_data_sha <- wilcoxpvalfunction(shannon_dat, "Shannons")
all_wilcoxon_pairwise <- rbind(wilcox_data_obs, wilcox_data_sha)
write_csv(all_wilcoxon_pairwise,
"~/github/mysosoup/data/text_tables/wilcoxon_pairwise/all_alpha_pairwise_Wilcoxon.csv")
## use a modified function from above to retain the actual p-values for supplementary file:
wilcoxpvalfunction <- function(data, metricval){
attach(data)
tmp_tri <- pairwise.wilcox.test(Alpha_value, Grouper, p.adjust.method = "BH")
detach()
h0_mat <- data.frame(tmp_tri$p.value)
h0_mat$Pair <- row.names(h0_mat)
h0_mat %>%
pivot_longer(-Pair, names_to="Names", values_to = "BH-adjusted p-val") %>%
filter(!is.na(`BH-adjusted p-val`)) %>%
mutate(Names = sub("\\.", "-", Names),
Metric = metricval,
`BH-adjusted p-val` = round(`BH-adjusted p-val`, 3)) %>%
arrange(Metric, `BH-adjusted p-val`)
}
wilcox_data_obs <- wilcoxpvalfunction(observed_dat, "Observed")
wilcox_data_sha <- wilcoxpvalfunction(shannon_dat, "Shannons")
all_wilcoxon_pairwise <- rbind(wilcox_data_obs, wilcox_data_sha)
write_csv(all_wilcoxon_pairwise,
"~/github/mysosoup/data/text_tables/wilcoxon_pairwise/all_alpha_pairwise_Wilcoxon.csv")
citation(ggmap)
citation("ggmap")
citation("ggsn")
citation("scico")
sitedata <- read_csv("https://raw.githubusercontent.com/devonorourke/mysosoup/master/data/metadata/brandenbark_pole_coordinates.csv") %>%
rename(lat = lat_dec, lon = long_dec) %>% select(-x, -y)
googmap_hyb <- get_googlemap(center=c(lon = -89.075, lat = 37.325), zoom=13, maptype = "hybrid")
library(ggmap)
library(ggsn)
library(tidyverse)
library(ggrepel)
library(scico)
googmap_hyb <- get_googlemap(center=c(lon = -89.075, lat = 37.325), zoom=13, maptype = "hybrid")
googmap_sat <- get_googlemap(center=c(lon = -89.075, lat = 37.325), zoom=13, maptype = "satellite")
